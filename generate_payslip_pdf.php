<?php
// generate_payslip_pdf.php
// Requires: config.php (DB connection) and fpdf.php (FPDF library).
// Place GARAY.jpg in the same folder (or adjust the path below).

require_once 'config.php'; // your DB connection
require_once 'libs/fpdf.php'; // ensure FPDF is available at this path

// Helper for safe formatting
function money($val) {
    return number_format((float)$val, 2, '.', ',');
}

if (!isset($_GET['payslip_id'])) {
    die('Payslip ID is required.');
}

$payslip_id = intval($_GET['payslip_id']);

// Fetch payslip and related data
$sql = "
SELECT p.payslip_id, p.generated_date, p.status, p.payslip_url,
       pt.payroll_transaction_id, pt.gross_pay, pt.tax_deductions, pt.statutory_deductions, pt.other_deductions, pt.net_pay, pt.processed_date,
       pc.cycle_name, pc.pay_period_start, pc.pay_period_end,
       ep.employee_id, ep.employee_number, ep.hire_date, ep.current_salary,
       pi.first_name, pi.last_name,
       jr.title AS job_title
FROM payslips p
JOIN payroll_transactions pt ON p.payroll_transaction_id = pt.payroll_transaction_id
JOIN payroll_cycles pc ON pt.payroll_cycle_id = pc.payroll_cycle_id
JOIN employee_profiles ep ON p.employee_id = ep.employee_id
LEFT JOIN personal_information pi ON ep.personal_info_id = pi.personal_info_id
LEFT JOIN job_roles jr ON ep.job_role_id = jr.job_role_id
WHERE p.payslip_id = ?
LIMIT 1
";

$stmt = $conn->prepare($sql);
$stmt->execute([$payslip_id]);
$data = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$data) {
    die('Payslip not found.');
}

// Map fields (falls back to zeros if missing)
$first_name = $data['first_name'] ?? '';
$last_name = $data['last_name'] ?? '';
$employee_name = trim($first_name . ' ' . $last_name);
$employee_number = $data['employee_number'] ?? '';
$job_title = $data['job_title'] ?? 'N/A';
$cycle_name = $data['cycle_name'] ?? 'Payroll';
$pay_period_start = $data['pay_period_start'] ?? '';
$pay_period_end = $data['pay_period_end'] ?? '';
$generated_date = $data['generated_date'] ?? $data['processed_date'] ?? date('Y-m-d H:i:s');

$basic_pay = $data['basic_pay'] ?? 0.00;           // placeholder; may not exist
$allowances = $data['allowances'] ?? 0.00;         // placeholder; may not exist
$overtime = $data['overtime'] ?? 0.00;             // placeholder; may not exist

// Use payroll_transactions fields
$gross_pay = $data['gross_pay'] ?? 0.00;
$tax_deductions = $data['tax_deductions'] ?? 0.00;
$statutory_deductions = $data['statutory_deductions'] ?? 0.00;
$other_deductions = $data['other_deductions'] ?? 0.00;
$total_deductions = $tax_deductions + $statutory_deductions + $other_deductions;
$net_pay = $data['net_pay'] ?? ($gross_pay - $total_deductions);

// You can override above with more granular values if your DB has columns like basic_pay, allowances, etc.
// If not present, the placeholders remain zero and gross/net come from payroll_transactions.

// Build filename: Payslip_FirstLast_Cycle.pdf (sanitize)
$sanitized_name = preg_replace('/[^A-Za-z0-9]/', '', $employee_name);
$sanitized_cycle = preg_replace('/[^A-Za-z0-9]/', '', str_replace(' ', '_', $cycle_name));
$filename = "Payslip_{$sanitized_name}_{$sanitized_cycle}.pdf";

// ------------------------
// Start FPDF generation
// ------------------------
class PayslipPDF extends FPDF {
    // For header/footer if needed
    function Header() {
        // we'll manage header in the main flow to keep flexibility
    }
    function Footer() {
        // Page number (optional)
        $this->SetY(-12);
        $this->SetFont('Arial','I',8);
        $this->Cell(0,6,'Generated by Municipality Payroll System',0,0,'C');
    }
}

$pdf = new PayslipPDF('P','mm','A4');
$pdf->SetAutoPageBreak(true, 15);
$pdf->AddPage();

// Colors and fonts for black/gray theme
$pdf->SetDrawColor(120,120,120);
$pdf->SetTextColor(30,30,30);
$pdf->SetFont('Arial','B',14);

// Header: logo and municipality text
$logoPath = 'GARAY.jpg'; // adjust path if needed
if (file_exists($logoPath)) {
    $pdf->Image($logoPath, 15, 10, 22); // x,y,width
}
$pdf->SetXY(40, 10);
$pdf->SetFont('Arial','B',12);
$pdf->Cell(0,6, 'REPUBLIC OF THE PHILIPPINES', 0, 1);
$pdf->SetFont('Arial','B',14);
$pdf->Cell(0,6, 'MUNICIPALITY OF NORZAGARAY, PROVINCE OF BULACAN', 0, 1);
$pdf->SetFont('Arial','',11);
$pdf->Cell(0,6, 'Payroll Division – Official Payslip', 0, 1);
$pdf->Ln(4);

// Reference / meta row
$pdf->SetFont('Arial','',10);
$pdf->SetFillColor(240,240,240);
$pdf->Cell(40,7,'Reference No.:',0,0,'L',false);
$pdf->SetFont('Arial','B',10);
$pdf->Cell(70,7, $data['payslip_id'],0,0,'L',false);
$pdf->SetFont('Arial','',10);
$pdf->Cell(30,7,'Generated:',0,0,'L',false);
$pdf->SetFont('Arial','',10);
$pdf->Cell(0,7,date('M d, Y g:i A', strtotime($generated_date)),0,1,'L',false);
$pdf->Ln(3);

// Employee & Payroll Info (two columns)
$pdf->SetFont('Arial','B',11);
$pdf->Cell(95,7,'Employee Information',0,0,'L');
$pdf->Cell(0,7,'Payroll Information',0,1,'L');

$pdf->SetFont('Arial','',10);
$pdf->Cell(95,6, "Name: {$employee_name}",0,0,'L');
$pp = date('M d, Y', strtotime($pay_period_start ?? date('Y-m-d'))) . ' - ' . date('M d, Y', strtotime($pay_period_end ?? date('Y-m-d')));
$pdf->Cell(0,6, "Cycle: {$cycle_name}",0,1,'L');

$pdf->Cell(95,6, "Employee #: {$employee_number}",0,0,'L');
$pdf->Cell(0,6, "Pay Period: {$pp}",0,1,'L');

$pdf->Cell(95,6, "Job Title: {$job_title}",0,0,'L');
$pdf->Cell(0,6, "Status: {$data['status']}",0,1,'L');

$pdf->Cell(95,6, "Salary Grade: " . ($data['salary_grade'] ?? 'N/A'),0,1,'L');
$pdf->Ln(4);

// Earnings & Deductions Tables side-by-side
$startX = $pdf->GetX();
$startY = $pdf->GetY();

// Left: Earnings
$pdf->SetFont('Arial','B',11);
$pdf->Cell(95,6,'Earnings',1,0,'C');
$pdf->SetFont('Arial','B',11);
$pdf->Cell(95,6,'Deductions',1,1,'C');

$pdf->SetFont('Arial','',10);

// Row: Basic Pay
$pdf->Cell(95,7,'Basic Pay',1,0,'L');
$pdf->Cell(95,7, 'Tax: ' . money($tax_deductions),1,1,'R');

// Allowances
$pdf->Cell(95,7,'Allowances',1,0,'L');
$pdf->Cell(95,7, 'GSIS: ' . money($statutory_deductions),1,1,'R');

// Overtime / Bonuses
$pdf->Cell(95,7,'Overtime / Bonuses',1,0,'L');
$pdf->Cell(95,7, 'Other Deductions: ' . money($other_deductions),1,1,'R');

// Totals row
$pdf->SetFont('Arial','B',10);
$pdf->Cell(95,8,'Total Gross',1,0,'L');
$pdf->Cell(95,8,'Total Deductions',1,1,'R');

$pdf->SetFont('Arial','',10);
$pdf->Cell(95,8, '₱ ' . money($gross_pay),1,0,'L');
$pdf->Cell(95,8, '₱ ' . money($total_deductions),1,1,'R');

$pdf->Ln(5);

// Net Pay box (center)
$pdf->SetFont('Arial','B',12);
$pdf->SetDrawColor(80,80,80);
$w = 200;
$pdf->Cell(0,8,'NET PAY:  ₱ ' . money($net_pay),1,1,'C');

// Remarks
$pdf->Ln(6);
$pdf->SetFont('Arial','B',11);
$pdf->Cell(0,6,'Remarks / Notes',0,1,'L');
$pdf->SetFont('Arial','',10);
$remarks = $data['remarks'] ?? 'N/A';
$pdf->MultiCell(0,6, $remarks,1,'L');

$pdf->Ln(10);

// Signatures
$cellW = 95;
$pdf->Cell($cellW,6,'',0,0);
$pdf->Cell($cellW,6,'',0,1);
$pdf->Cell($cellW,10,'____________________________',0,0,'C');
$pdf->Cell($cellW,10,'____________________________',0,1,'C');
$pdf->Cell($cellW,6,'Prepared by',0,0,'C');
$pdf->Cell($cellW,6,'Approved by',0,1,'C');

// Output to browser for download
$pdf->Output('D', $filename);
exit;
